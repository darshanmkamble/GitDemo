<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="13" passed="12" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-01-12T10:45:45 IST" name="TestNgSuite" finished-at="2022-01-12T10:45:45 IST" duration-ms="83">
    <groups>
      <group name="Smoke">
        <method signature="TestNgFour.mobileHomeLogin()[pri:0, instance:test.TestNgFour@4d5b6aac]" name="mobileHomeLogin" class="test.TestNgFour"/>
        <method signature="TestNgTwo.goodbye()[pri:0, instance:test.TestNgTwo@10d307f1]" name="goodbye" class="test.TestNgTwo"/>
        <method signature="TestNgThree.mobileCarSignIn()[pri:0, instance:test.TestNgThree@485966cc]" name="mobileCarSignIn" class="test.TestNgThree"/>
      </group> <!-- Smoke -->
    </groups>
    <test started-at="2022-01-12T10:45:45 IST" name="Car Loan" finished-at="2022-01-12T10:45:45 IST" duration-ms="83">
      <class name="test.TestNgOne">
        <test-method is-config="true" signature="stopExecution()[pri:0, instance:test.TestNgOne@7a419da4]" started-at="2022-01-12T10:45:45 IST" name="stopExecution" finished-at="2022-01-12T10:45:45 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- stopExecution -->
      </class> <!-- test.TestNgOne -->
      <class name="test.TestNgThree">
        <test-method is-config="true" signature="setGlobals()[pri:0, instance:test.TestNgThree@485966cc]" started-at="2022-01-12T10:45:45 IST" name="setGlobals" finished-at="2022-01-12T10:45:45 IST" duration-ms="10" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setGlobals -->
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:test.TestNgThree@485966cc]" started-at="2022-01-12T10:45:45 IST" name="beforeClass" finished-at="2022-01-12T10:45:45 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method signature="mobileCarLogin()[pri:0, instance:test.TestNgThree@485966cc]" started-at="2022-01-12T10:45:45 IST" name="mobileCarLogin" finished-at="2022-01-12T10:45:45 IST" duration-ms="7" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mobileCarLogin -->
        <test-method signature="mobileCarSignIn()[pri:0, instance:test.TestNgThree@485966cc]" started-at="2022-01-12T10:45:45 IST" name="mobileCarSignIn" finished-at="2022-01-12T10:45:45 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mobileCarSignIn -->
        <test-method signature="mobileCarSignOut(java.lang.String,java.lang.String)[pri:0, instance:test.TestNgThree@485966cc]" started-at="2022-01-12T10:45:45 IST" name="mobileCarSignOut" data-provider="getData" finished-at="2022-01-12T10:45:45 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firstUserName]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[firstPassword]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mobileCarSignOut -->
        <test-method signature="mobileCarSignOut(java.lang.String,java.lang.String)[pri:0, instance:test.TestNgThree@485966cc]" started-at="2022-01-12T10:45:45 IST" name="mobileCarSignOut" data-provider="getData" finished-at="2022-01-12T10:45:45 IST" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[secondUserName]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[secondPassword]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mobileCarSignOut -->
        <test-method signature="mobileCarSignOut(java.lang.String,java.lang.String)[pri:0, instance:test.TestNgThree@485966cc]" started-at="2022-01-12T10:45:45 IST" name="mobileCarSignOut" data-provider="getData" finished-at="2022-01-12T10:45:45 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[thirdUserName]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[thirdPassword]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mobileCarSignOut -->
        <test-method signature="webCarLogin(java.lang.String,java.lang.String)[pri:0, instance:test.TestNgThree@485966cc]" started-at="2022-01-12T10:45:45 IST" name="webCarLogin" finished-at="2022-01-12T10:45:45 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[rahulshettyacademy.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[123456]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- webCarLogin -->
        <test-method signature="loginAPI()[pri:0, instance:test.TestNgThree@485966cc]" started-at="2022-01-12T10:45:45 IST" name="loginAPI" finished-at="2022-01-12T10:45:45 IST" depends-on-methods="test.TestNgThree.webCarLogin" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginAPI -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:test.TestNgThree@485966cc]" started-at="2022-01-12T10:45:45 IST" name="afterClass" finished-at="2022-01-12T10:45:45 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- test.TestNgThree -->
    </test> <!-- Car Loan -->
    <test started-at="2022-01-12T10:45:45 IST" name="TestNgTests" finished-at="2022-01-12T10:45:45 IST" duration-ms="79">
      <class name="test.TestNgTwo">
        <test-method is-config="true" signature="prerequisite()[pri:0, instance:test.TestNgTwo@10d307f1]" started-at="2022-01-12T10:45:45 IST" name="prerequisite" finished-at="2022-01-12T10:45:45 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- prerequisite -->
        <test-method signature="goodbye()[pri:0, instance:test.TestNgTwo@10d307f1]" started-at="2022-01-12T10:45:45 IST" name="goodbye" finished-at="2022-01-12T10:45:45 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- goodbye -->
      </class> <!-- test.TestNgTwo -->
      <class name="test.TestNgFour">
        <test-method signature="loginAPI()[pri:0, instance:test.TestNgFour@4d5b6aac]" started-at="2022-01-12T10:45:45 IST" name="loginAPI" finished-at="2022-01-12T10:45:45 IST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginAPI -->
        <test-method signature="mobileHomeLogin()[pri:0, instance:test.TestNgFour@4d5b6aac]" started-at="2022-01-12T10:45:45 IST" name="mobileHomeLogin" finished-at="2022-01-12T10:45:45 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mobileHomeLogin -->
        <test-method signature="webHomeLogin()[pri:0, instance:test.TestNgFour@4d5b6aac]" started-at="2022-01-12T10:45:45 IST" name="webHomeLogin" finished-at="2022-01-12T10:45:45 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- webHomeLogin -->
      </class> <!-- test.TestNgFour -->
      <class name="test.TestNgOne">
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:test.TestNgOne@7a419da4]" started-at="2022-01-12T10:45:45 IST" name="beforeMethod" finished-at="2022-01-12T10:45:45 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="bye()[pri:0, instance:test.TestNgOne@7a419da4]" started-at="2022-01-12T10:45:45 IST" name="bye" finished-at="2022-01-12T10:45:45 IST" duration-ms="7" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bye -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:test.TestNgOne@7a419da4]" started-at="2022-01-12T10:45:45 IST" name="afterMethod" finished-at="2022-01-12T10:45:45 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:test.TestNgOne@7a419da4]" started-at="2022-01-12T10:45:45 IST" name="beforeMethod" finished-at="2022-01-12T10:45:45 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="hello()[pri:0, instance:test.TestNgOne@7a419da4]" started-at="2022-01-12T10:45:45 IST" name="hello" finished-at="2022-01-12T10:45:45 IST" duration-ms="6" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertTrue(Assert.java:45)
at org.testng.Assert.assertTrue(Assert.java:55)
at test.TestNgOne.hello(TestNgOne.java:20)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:28)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:418)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
at java.base/java.lang.Thread.run(Thread.java:831)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- hello -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:test.TestNgOne@7a419da4]" started-at="2022-01-12T10:45:45 IST" name="afterMethod" finished-at="2022-01-12T10:45:45 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="finalCleanup()[pri:0, instance:test.TestNgOne@7a419da4]" started-at="2022-01-12T10:45:45 IST" name="finalCleanup" finished-at="2022-01-12T10:45:45 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- finalCleanup -->
      </class> <!-- test.TestNgOne -->
    </test> <!-- TestNgTests -->
  </suite> <!-- TestNgSuite -->
</testng-results>
